{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "location": {
          "type": "string",
          "metadata": {
              "description": "Deployment location"
          }
      },
      "adminUsername": {
          "type": "string",
          "defaultValue": "",
          "metadata": {
              "description": "Username for the Virtual Machine."
          }
      },
      "adminPassword": {
          "type": "securestring",
          "defaultValue" : "",
          "metadata": {
              "description": "Password for the Virtual Machine."
          }
      },
      "sshPublicKey": {
          "type": "string",
          "defaultValue": "",
          "metadata": {
              "description": "SSH Key for the VM."
          }
      },
      "authenticationType": {
          "type": "string",
          "defaultValue": "password",
          "allowedValues": [
              "password",
              "sshPublicKey"
          ],
          "metadata": {
              "description": "Authentication Type to chose for ssh into the VM."
          }
      },
      "vmName": {
          "type": "string",
          "defaultValue": "CSR",
          "metadata": {
              "description": "Name for the Virtual Machine."
          }
      },
      "sku": {
          "type" : "string",
          "defaultValue": "",
          "metadata": {
              "description": "SKU version"
          }
      },
      "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique Name for Storage Account where the Virtual Machine's disks will be placed."
            }
      },
      "storageAccountType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of storage account created."
            }
      },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identifies whether to use new or existing Storage Account"
            }
        },
        "storageAccountExistingRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group containing existing storage account"
            }
        },
        "availabilitySet": {
            "type": "string",
            "defaultValue": "Yes",
            "metadata": {
                "description": "Availability Set"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue" : "defaultAvName",
            "metadata": {
                "description": "Availability Set Name"
            }
        },
        "availabilitySetFaultDomainCount": {
            "type": "string",
            "defaultValue" : "2",
            "metadata": {
                "description": "Availability Set Fault domain count"
            }
        },
        "availabilitySetUpdateDomainCount": {
            "type": "string",
            "defaultValue" : "20",
            "metadata": {
                "description": "Availability Set Update domain count"
            }
        },
        "vmSize" : {
            "type" : "string",
            "defaultValue" : "Standard_D2_v2",
            "allowedValues" : [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2"
            ],
            "metadata" : {
                "description" : "Size of the Virtual Machine."
            }
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "URL to acquire other templates"
            },
            "defaultValue": ""
        },
        "tvnetStorageName": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
              "description": "Storage account for tvnet."
          }
        },
        "privateStorageName": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
              "description": "Private Storage account for tvnet."
          }
        },
        "tvnetStorageKey": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
              "description": "Storage account Key for tvnet."
          }
        },
        "privateStorageKey": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
              "description": "Private Storage account Key for tvnet."
          }
        },
        "sectiontvnet": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
              "description": "custom data for tvnet"
          }
        },
        "guestshellconfig": {
          "type": "string",
          "defaultValue" : "",
          "metadata": {
              "description": "Guestshell config required."
          }
        }
  },
  "variables": {
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "tvnetStorageNamecustomdata": "[concat('strgacctname ',parameters('tvnetStorageName'),'\n','strgacckey ',parameters('tvnetStorageKey'),'\n','privatestrgacctname ',parameters('privateStorageName'),'\n','privatestrgacckey ',parameters('privateStorageKey'),'\n')]",
    "osProfile": {          
        "computername": "[variables('vmName')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[if(equals(parameters('authenticationType'), 'password'), parameters('adminPassword'), json('null'))]",
        "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
        "customData": "[base64(concat(parameters('guestshellconfig'),parameters('sectiontvnet'),'role hub-1\n',variables('tvnetStorageNamecustomdata')))]"
      },
      "osProfile2": {
        "computername": "[variables('vmName2')]",
        "adminUsername": "[parameters('adminUsername')]",
        "adminPassword": "[if(equals(parameters('authenticationType'), 'password'), parameters('adminPassword'), json('null'))]",
        "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
        "customData": "[base64(concat(parameters('guestshellconfig'),parameters('sectiontvnet'),'role hub-2\n',variables('tvnetStorageNamecustomdata')))]"
      },
      "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[parameters('sshPublicKey')]"
                    }
                ]
            }
        },
    "vmname" : "[concat(parameters('vmName'),'-1')]",
    "vmname2" : "[concat(parameters('vmName'),'-2')]",
    "OSDiskName": "[concat(parameters('vmName'),'-disk1')]",
    "OSDiskName2": "[concat(parameters('vmName'),'-disk2')]",
    "imagePublisher": "cisco",
    "imageOffer": "cisco-csr-1000v",
    "imageSKU": "[parameters('sku')]",
    "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "availabilitySetID": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
    }
  },
  "resources": [
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('newStorageAccountName')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('storageAccountExistingRG')]"
                    }
                }
            }
        },
        {
            "condition": "[equals(parameters('availabilitySet'), 'Yes')]",
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": "[parameters('availabilitySetFaultDomainCount')]",
                "platformUpdateDomainCount": "[parameters('availabilitySetUpdateDomainCount')]"
            }
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "plan": {
                "name": "[variables('imageSKU')]",
                "publisher": "cisco",
                "product": "cisco-csr-1000v"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[variables('osProfile')]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('OSDiskName')]",
                        "vhd": {
                            "uri": "[concat(reference('Microsoft.Resources/deployments/SettingUpStorageAccount', '2018-05-01').outputs.storageAccountId.value, 'vhds/osdisk', uniqueString(deployment().name), '1.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic0'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic1'))]"
                        }
                    ]
                },
                "availabilitySet": "[if(equals(parameters('availabilitySet'),'Yes'), variables('availabilitySetID'), json('null'))]"
            }
        },
        {
            "apiVersion": "2017-12-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName2')]",
            "location": "[parameters('location')]",
            "plan": {
                "name": "[variables('imageSKU')]",
                "publisher": "cisco",
                "product": "cisco-csr-1000v"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[variables('osProfile2')]",
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('OSDiskName2')]",
                        "vhd": {
                            "uri": "[concat(reference('Microsoft.Resources/deployments/SettingUpStorageAccount', '2018-05-01').outputs.storageAccountId.value, 'vhds/osdisk', uniqueString(deployment().name), '2.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic2'))]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic3'))]"
                        }
                    ]
                },
                "availabilitySet": "[if(equals(parameters('availabilitySet'),'Yes'), variables('availabilitySetID'), json('null'))]"
            }
        }
    ]
    }