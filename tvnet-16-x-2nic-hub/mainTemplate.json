{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Deployment location"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "tvnethub",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "sshPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH Key for the VM."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Authentication Type to chose for ssh into the VM."
            }
         },
        "sku": {
            "type" : "string",
            "defaultValue": "16_9-byol",
            "allowedValues": [
                "16_9-byol",
                "16_10-byol",
                "16_10-payg-ax",
                "16_10-payg-sec"
            ],
            "metadata": {
                "description": "SKU version"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "CSR_Network",
            "metadata": {
                "description": "VNet name"
            }
        },
        "virtualNetworkExistingRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Identifies whether to use new or existing Storage Account"
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "11.0.0.0/16",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "vnetNewOrExisting" : {
            "type" : "string",
            "defaultValue" : "new",
            "metadata": {
                "description": "Identifies whether to use new or existing Virtual Network"
            }
        },
        "Subnet1Prefix": {
            "type": "string",
            "defaultValue": "11.0.0.0/24",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "Subnet1Name": {
            "type": "string",
            "defaultValue": "sub1",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "Subnet2Prefix": {
            "type": "string",
            "defaultValue": "11.0.1.0/24",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "Subnet2Name": {
            "type": "string",
            "defaultValue": "sub2",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "managedDisk": {
            "type": "string",
            "defaultValue" : "Enabled",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "metadata": {
                "description": "Managed Disk"
            }
        },
        "availabilitySet": {
            "type": "string",
            "defaultValue": "Yes",
            "allowedValues": [
              "Yes",
              "No"
            ],
            "metadata": {
                "description": "Availability Set"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue" : "defaultAvName",
            "metadata": {
                "description": "Availability Set Name"
            }
        },
        "availabilitySetFaultDomainCount": {
            "type": "string",
            "defaultValue" : "2",
            "metadata": {
                "description": "Availability Set Fault domain count"
            }
        },
        "availabilitySetUpdateDomainCount": {
            "type": "string",
            "defaultValue" : "20",
            "metadata": {
                "description": "Availability Set Update domain count"
            }
        },
        "newStorageAccountName": {
            "type": "string",
            "defaultValue": "defaultstrg",
            "metadata": {
                "description": "Unique Name for Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of storage account created."
            }
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identifies whether to use new or existing Storage Account"
            }
        },
        "storageAccountExistingRG": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource Group containing existing storage account"
            }
        },
        "bootDiagnostics": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Capture boot logs and screenshots of VM to help diagnose bootup issues"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id, deployment().name)]",
            "metadata": {
                "description": "Unique Name for Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "diagnosticsStorageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The type of storage account created."
            }
        },
        "diagnosticsStorageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Identifies whether to use new or existing Storage Account"
            }
        },
        "diagnosticsStorageAccountExistingRG": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource Group containing existing storage account"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "newcsrpip",
            "metadata": {
                "description": "Name of the Public IP Address"
            }
        },
        "publicIPDnsName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Indicates whether the Public IP is new or existing"
            }
        },
        "publicIPExistingRGName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group containing existing public IP"
            }
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "URL to acquire other templates"
            },
            "defaultValue": "https://ciscogithubpublictempl.blob.core.windows.net/hubtemplates"
        },
        "vmSize" : {
            "type" : "string",
            "defaultValue" : "Standard_D2_v2",
            "allowedValues" : [
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2"
            ],
            "metadata" : {
                "description" : "Size of the Virtual Machine."
            }
        },
        "transitVnetName" : {
            "type" : "string",
            "defaultValue" : "newtenet123",
            "metadata" : {
                "description" : "Name for Transit VNET."
            }

        },
        "tvnetStorageName" : {
            "type" : "string",
            "defaultValue" : "newtenet123strg",
            "minLength": 3,
            "maxLength" : 24,
            "metadata" : {
                "description" : "Storage Account name for Transit VNET."
            }
        },
        "tvnetStorageType" : {
            "type" : "string",
            "defaultValue" : "Standard_LRS",
            "allowedValues": [
                "Standard_LRS"
            ],
            "metadata" : {
                "description" : "Storage Account type for Transit VNET."
            }
        },
        "privateTvnetStorageName" : {
            "type" : "string",
            "defaultValue" : "privnewtenet123strg",
            "minLength": 3,
            "maxLength" : 24,
            "metadata" : {
                "description" : "Private Storage Account name for Transit VNET."
            }
        },
        "privateTvnetStorageType" : {
            "type" : "string",
            "defaultValue" : "Standard_LRS",
            "allowedValues": [
                "Standard_LRS"
            ],
            "metadata" : {
                "description" : "Private Storage Account type for Transit VNET."
            }
        },
        "TunnelID" : {
            "type" : "string",
            "defaultValue" : "10",
            "metadata" : {
                "description" : "DMVPN Tunnel ID in Hub and Spokes."
            }
        },
        "TunnelKey" : {
            "type" : "string",
            "defaultValue" : "999",
            "metadata" : {
                "description" : "DMVPN Tunnel Key."
            }

        },
        "IpsecAuthentication" : {
            "type" : "string",
            "defaultValue" : "ESP-SHA256-HMAC",
            "allowedValues" : [
                "ESP-SHA-HMAC", 
                "ESP-SHA256-HMAC", 
                "ESP-SHA384-HMAC", 
                "ESP-SHA512-HMAC"
            ],
            "metadata" : {
                "description" : "IPSEC Authentication Alogrithm"
            }
        },
        "IpsecCipher" : {
            "type" : "string",
            "defaultValue" : "ESP-AES",
            "allowedValues" : [
                "ESP-AES", 
                "ESP-GCM", 
                "ESP-GMAC", 
                "ESP-3DES", 
                "ESP-DES"
            ],
            "metadata" : {
                "description" : "IPSEC Cipher Algorithm"
            }
        },
        "SharedKey" : {
            "type" : "string",
            "defaultValue" : "cisco",
            "metadata" : {
                "description" : "ISAKMP shared key"
            }
        },
        "DMVPNTunnelIpCidr" : {
            "type" : "string",
            "defaultValue" : "10.101.0.0/16",
            "metadata" : {
                "description" : "DMVPN Tunnel CIDR."
            }
        },
        "RoutingProtocol" : {
            "type" : "string",
            "defaultValue" : "EIGRP",
            "allowedValues" : [
                "EIGRP",
                "BGP"
            ],
            "metadata" : {
                "description" : "ROuting protocol to run over the DMVPN tunnels."
            }
        },
        "RoutingProtocolASN" : {
            "type" : "string",
            "defaultValue" : "10000",
            "metadata" : {
                "description" : "AS number of routing protocol"
            }
        },
        "NHRPNetworkId" : {
            "type" : "string",
            "defaultValue" : "9898",
            "metadata" : {
                "description" : "Network ID for NHRP protocol"
            }
        },
        "NHRPAuthString" : {
            "type" : "string",
            "defaultValue" : "cisco",
            "metadata" : {
                "description" : "Authentication string to use on an interface running NHRP"
            }
        }
    },
    "variables": {
        "nsgname": "[concat(parameters('vmName'),'-SSH-SecurityGroup')]",
        "transitVnetName": "[concat('transitvnetname ',parameters('transitVnetName'),'\n')]",
        "TunnelID": "[concat('TunnelID ',parameters('TunnelID'),'\n')]",
        "IpsecAuthentication": "[concat('IpsecAuthentication ',parameters('IpsecAuthentication'),'\n')]",
        "IpsecCipher": "[concat('IpsecCipher ',parameters('IpsecCipher'),'\n')]",
        "DMVPNTunnelIpCidr": "[concat('DMVPNTunnelIpCidr ',parameters('DMVPNTunnelIpCidr'),'\n')]",
        "RoutingProtocol": "[concat('RoutingProtocol ',parameters('RoutingProtocol'),'\n')]",
        "RoutingProtocolASN": "[concat('RoutingProtocolASN ',parameters('RoutingProtocolASN'),'\n')]",
        "NHRPNetworkId": "[concat('NHRPNetworkId ',parameters('NHRPNetworkId'),'\n')]",
        "TunnelKey": "[if(equals(parameters('TunnelKey'),' '),'', concat('TunnelKey ',parameters('TunnelKey'),'\n'))]",
        "NHRPAuthString": "[if(equals(parameters('NHRPAuthString'),' '),'', concat('NHRPAuthString ',parameters('NHRPAuthString'),'\n'))]",
        "SharedKey": "[if(equals(parameters('SharedKey'),' '),'', concat('SharedKey ',parameters('SharedKey'),'\n'))]",
        "apiVer": "2018-08-01",
        "publicIPAddressType": "Static",     
        "diagnosticsStorageAccountName": "[replace(parameters('diagnosticsStorageAccountName'),'-', '')]",
        "newStorageAccountName": "[replace(parameters('newStorageAccountName'),'-', '')]",
        "tvnetStorageURL": "[concat(parameters('baseUrl'),'/tvnetStorage.json')]",
        "diagnosticsStorageAccountSetupURL": "[concat(parameters('baseUrl'),'/diagnosticsStorageAccount-',parameters('diagnosticsStorageAccountNewOrExisting'),'.json')]",
        "publicIPSetupURL": "[concat(parameters('baseUrl'),'/publicip-',parameters('publicIPNewOrExisting'),'.json')]",
        "virtualNetworkSetupURL": "[concat(parameters('baseUrl'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]",
        "managedDiskBootDiagnosticsVMdeploymentURL": "[concat(parameters('baseUrl'),'/managedDiskBootDiagnostics.json')]",
        "managedDiskNoBootDiagnosticsVMdeploymentURL": "[concat(parameters('baseUrl'),'/managedDiskNoBootDiagnostics.json')]",
        "unmanagedDiskBootDiagnosticsVMdeploymentURL": "[concat(parameters('baseUrl'),'/unmanagedDiskBootDiagnostics.json')]",
        "unmanagedDiskNoBootDiagnosticsVMdeploymentURL": "[concat(parameters('baseUrl'),'/unmanagedDiskNoBootDiagnostics.json')]",

        "guestshellconfig": "event manager applet after-guestshell-tvnet\nevent timer watchdog time 30 maxrun 300\naction 2.0  cli command \"enable\"\naction 2.1  cli command \"show app-hosting list | include guestshell\"\naction 2.2  regexp \".*RUNNING\" \"$_cli_result\"\naction 2.3  if $_regexp_result eq \"1\"\naction 2.4   cli command \"conf t\"\naction 2.5   cli command \"no event manager applet after-boot\"\naction 2.6   cli command \"no event manager applet after-guestshell-tvnet\"\naction 2.7   cli command \"end\"\naction 2.8   cli command \"guestshell run pip install csr_tvnet_azure==1.0.5 --user\"\naction 2.9   syslog msg \"Installing csr_azure_tvnet package\"\naction 2.91 cli command \"send log Starting TransitVnet Section\"\naction 2.92 cli command \"guestshell run python /home/guestshell/.local/bin/setup_tvnet.py -d /bootflash/azure/decodedCustomData.txt \"\naction 2.93 cli command \"send log Done with Transitvnet section\"\naction 2.99 end\n",

        "sectiontvnet" : "[concat('section: IOS Configuration\nip http server\n\nsection: AzureTransitVnet\n',variables('transitVnetName'),variables('TunnelID'),variables('IpsecAuthentication'),variables('IpsecCipher'),variables('SharedKey'),variables('DMVPNTunnelIpCidr'),variables('RoutingProtocol'),variables('NHRPNetworkId'),variables('RoutingProtocolASN'),variables('TunnelKey'),variables('NHRPAuthString'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "pid-79e8a9a8-e782-5a3c-afb9-49752829e57d",
            "apiVersion": "2018-02-01",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
          {
            "name": "SettingUpTvnetStorage",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('tvnetStorageURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "tvnetStorageName": {
                        "value": "[parameters('tvnetStorageName')]"
                    },
                    "tvnetStorageType": {
                        "value": "[parameters('tvnetStorageType')]"
                    },
                    "privateStorageName": {
                        "value": "[parameters('privateTvnetStorageName')]"
                    },
                    "privateTvnetStorageType": {
                        "value": "[parameters('privateTvnetStorageType')]"
                    }
                }
            }
        },
          {
            "condition": "[equals(parameters('bootDiagnostics'), 'true')]",
            "name": "SettingUpDiagnosticsStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",                  
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('diagnosticsStorageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "diagnosticsStorageAccountName": {
                        "value": "[variables('diagnosticsStorageAccountName')]"
                    },
                    "diagnosticsStorageAccountType": {
                        "value": "[parameters('diagnosticsStorageAccountType')]"
                    },
                    "diagnosticsStorageAccountExistingRG": {
                        "value": "[parameters('diagnosticsStorageAccountExistingRG')]"
                    }
                }
            }
          },
          {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIPSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('publicIPAddressName')]"
                    },
                    "publicIp2AddressName": {
                        "value": "[concat(parameters('publicIPAddressName'),'2')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('publicIPAddressType')]"
                    },
                    "publicIPNewOrExisting": {
                        "value": "[parameters('publicIPNewOrExisting')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIPDnsName')]"
                    },
                    "dns2Prefix": {
                        "value": "[concat(parameters('publicIPDnsName'),'2')]"
                    },
                    "publicIpRGName" : {
                        "value" : "[parameters('publicIPExistingRGName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmName'),'-SSH-SecurityGroup')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH-Rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-Rule1",
                        "properties": {
                            "description": "Allow UDP",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "500",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-Rule2",
                        "properties": {
                            "description": "Allow UDP",
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4500",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "SettingUpVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-08-01",
            "dependsOn" : [
                "[concat('Microsoft.Network/routeTables/', parameters('Subnet1Name'),'-CSR-RouteTable')]",
                "[concat('Microsoft.Network/routeTables/', parameters('Subnet2Name'),'-CSR-RouteTable')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('virtualNetworkSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('virtualNetworkName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[parameters('virtualNetworkAddressPrefix')]"
                    },
                    "Subnet1Name": {
                        "value": "[parameters('Subnet1Name')]"
                    },
                    "Subnet1Prefix": {
                        "value": "[parameters('Subnet1Prefix')]"
                    },
                    "Subnet2Name": {
                        "value": "[parameters('Subnet2Name')]"
                    },
                    "Subnet2Prefix": {
                        "value": "[parameters('Subnet2Prefix')]"
                    },
                    "vnetExistingRGName": {
                        "value": "[parameters('virtualNetworkExistingRGName')]"
                    },
                    "routeTable1Name" :{
                      "value" : "[concat(parameters('Subnet1Name'),'-CSR-RouteTable')]"
                    },
                    "routeTable2Name" :{
                      "value" : "[concat(parameters('Subnet2Name'),'-CSR-RouteTable')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[concat(parameters('Subnet1Name'),'-CSR-RouteTable')]",
            "apiVersion": "[variables('apiVer')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[concat(parameters('Subnet2Name'),'-CSR-RouteTable')]",
            "apiVersion": "[variables('apiVer')]",
            "location": "[parameters('location')]"
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic0')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2018-08-01').outputs.subnet1Ref.value]"
                            },
                            "publicIPAddress":{
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpPublicIp', '2018-05-01').outputs.publicIpId.value]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                },
                "enableIPForwarding": true
              }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2018-08-01').outputs.subnet2Ref.value]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        }, 
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2018-08-01').outputs.subnet1Ref.value]"
                            },
                            "publicIPAddress":{
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpPublicIp', '2018-05-01').outputs.publicIpId2.value]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                },
                "enableIPForwarding": true
              }
        },
        {
            "apiVersion": "[variables('apiVer')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'),'-Nic3')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2018-08-01').outputs.subnet2Ref.value]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "condition": "[and( equals(parameters('managedDisk'), 'Enabled'), equals(parameters('bootDiagnostics'), 'true') )]",
            "type": "Microsoft.Resources/deployments",
            "name": "managedDiskBootDiagnosticsVMdeployment",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic2')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic3')]",
                "Microsoft.Resources/deployments/SettingUpTvnetStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('managedDiskBootDiagnosticsVMdeploymentURL')]",
                    "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "vmName": {
                  "value": "[parameters('vmName')]"
                },
                "sku": {
                  "value": "[parameters('sku')]" 
                },
                "location": {
                  "value": "[parameters('location')]"
                },
                "vmSize": {
                  "value": "[parameters('vmSize')]"
                },
                "authenticationType": {
                  "value": "[parameters('authenticationType')]"
                },
                "storageAccountType": {
                  "value": "[parameters('storageAccountType')]"
                },
                "adminUsername": {
                  "value": "[parameters('adminUsername')]"
                },
                "adminPassword": {
                  "value": "[parameters('adminPassword')]"
                },
                "sshPublicKey": {
                  "value": "[parameters('sshPublicKey')]"
                },
                "availabilitySet": {
                  "value": "[parameters('availabilitySet')]"
                },
                "availabilitySetName": {
                  "value": "[parameters('availabilitySetName')]"
                },
                "availabilitySetFaultDomainCount": {
                  "value": "[parameters('availabilitySetFaultDomainCount')]"
                },
                "availabilitySetUpdateDomainCount": {
                  "value": "[parameters('availabilitySetUpdateDomainCount')]"
                },
                "bootDiagnostics": {
                  "value": "[parameters('bootDiagnostics')]"
                },
                "tvnetStorageName": {
                    "value" : "[parameters('tvnetStorageName')]"
                },
                "privateStorageName": {
                    "value": "[parameters('privateTvnetStorageName')]"
                },
                "tvnetStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.tvnetStorageKey.value]"
                },
                "privateStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.privateStorageKey.value]"
                },
                "sectiontvnet": {
                    "value" : "[variables('sectiontvnet')]"
                },
                "guestshellconfig": {
                    "value" : "[variables('guestshellconfig')]"
                }
            }
            }
        },
        {
            "condition": "[and( equals(parameters('managedDisk'), 'Enabled'), equals(parameters('bootDiagnostics'), 'false') )]",
            "type": "Microsoft.Resources/deployments",
            "name": "managedDiskNoBootDiagnosticsVMdeployment",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic2')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic3')]",
                "Microsoft.Resources/deployments/SettingUpTvnetStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('managedDiskNoBootDiagnosticsVMdeploymentURL')]",
                    "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "vmName": {
                  "value": "[parameters('vmName')]"
                },
                "sku": {
                  "value": "[parameters('sku')]" 
                },
                "location": {
                  "value": "[parameters('location')]"
                },
                "vmSize": {
                  "value": "[parameters('vmSize')]"
                },
                "authenticationType": {
                  "value": "[parameters('authenticationType')]"
                },
                "storageAccountType": {
                  "value": "[parameters('storageAccountType')]"
                },
                "adminUsername": {
                  "value": "[parameters('adminUsername')]"
                },
                "adminPassword": {
                  "value": "[parameters('adminPassword')]"
                },
                "sshPublicKey": {
                  "value": "[parameters('sshPublicKey')]"
                },
                "availabilitySet": {
                  "value": "[parameters('availabilitySet')]"
                },
                "availabilitySetName": {
                  "value": "[parameters('availabilitySetName')]"
                },
                "availabilitySetFaultDomainCount": {
                  "value": "[parameters('availabilitySetFaultDomainCount')]"
                },
                "availabilitySetUpdateDomainCount": {
                  "value": "[parameters('availabilitySetUpdateDomainCount')]"
                },
                "tvnetStorageName": {
                    "value" : "[parameters('tvnetStorageName')]"
                },
                "privateStorageName": {
                    "value": "[parameters('privateTvnetStorageName')]"
                },
                "tvnetStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.tvnetStorageKey.value]"
                },
                "privateStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.privateStorageKey.value]"
                },
                "sectiontvnet": {
                    "value" : "[variables('sectiontvnet')]"
                },
                "guestshellconfig": {
                    "value" : "[variables('guestshellconfig')]"
                }
            }
            }
        },
        {
            "condition": "[and( equals(parameters('managedDisk'), 'Disabled'), equals(parameters('bootDiagnostics'), 'true') )]",
            "type": "Microsoft.Resources/deployments",
            "name": "unmanagedDiskBootDiagnosticsVMdeployment",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic2')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic3')]",
                "Microsoft.Resources/deployments/SettingUpTvnetStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('unmanagedDiskBootDiagnosticsVMdeploymentURL')]",
                    "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "vmName": {
                  "value": "[parameters('vmName')]"
                },
                "sku": {
                  "value": "[parameters('sku')]" 
                },
                "location": {
                  "value": "[parameters('location')]"
                },
                "vmSize": {
                  "value": "[parameters('vmSize')]"
                },
                "authenticationType": {
                  "value": "[parameters('authenticationType')]"
                },
                "newStorageAccountName": {
                  "value": "[variables('newStorageAccountName')]"
                },
                "storageAccountType": {
                    "value": "[parameters('storageAccountType')]"
                },
                "storageAccountNewOrExisting": {
                    "value": "[parameters('storageAccountNewOrExisting')]"
                },
                "storageAccountExistingRG": {
                    "value": "[parameters('storageAccountExistingRG')]"
                },
                "adminUsername": {
                  "value": "[parameters('adminUsername')]"
                },
                "adminPassword": {
                  "value": "[parameters('adminPassword')]"
                },
                "sshPublicKey": {
                  "value": "[parameters('sshPublicKey')]"
                },
                "availabilitySet": {
                  "value": "[parameters('availabilitySet')]"
                },
                "availabilitySetName": {
                  "value": "[parameters('availabilitySetName')]"
                },
                "availabilitySetFaultDomainCount": {
                  "value": "[parameters('availabilitySetFaultDomainCount')]"
                },
                "availabilitySetUpdateDomainCount": {
                  "value": "[parameters('availabilitySetUpdateDomainCount')]"
                },
                "bootDiagnostics": {
                  "value": "[parameters('bootDiagnostics')]"
                },
                "baseUrl": {
                  "value": "[parameters('baseUrl')]"
                },
                "tvnetStorageName": {
                    "value" : "[parameters('tvnetStorageName')]"
                },
                "privateStorageName": {
                    "value": "[parameters('privateTvnetStorageName')]"
                },
                "tvnetStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.tvnetStorageKey.value]"
                },
                "privateStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.privateStorageKey.value]"
                },
                "sectiontvnet": {
                    "value" : "[variables('sectiontvnet')]"
                },
                "guestshellconfig": {
                    "value" : "[variables('guestshellconfig')]"
                }
            }
            }
        },
        {
            "condition": "[and( equals(parameters('managedDisk'), 'Disabled'), equals(parameters('bootDiagnostics'), 'false') )]",
            "type": "Microsoft.Resources/deployments",
            "name": "unmanagedDiskNoBootDiagnosticsVMdeployment",
            "apiVersion": "2017-05-10",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic1')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic2')]",
                "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic3')]",
                "Microsoft.Resources/deployments/SettingUpTvnetStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('unmanagedDiskNoBootDiagnosticsVMdeploymentURL')]",
                    "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "vmName": {
                  "value": "[parameters('vmName')]"
                },
                "sku": {
                  "value": "[parameters('sku')]" 
                },
                "location": {
                  "value": "[parameters('location')]"
                },
                "vmSize": {
                  "value": "[parameters('vmSize')]"
                },
                "authenticationType": {
                  "value": "[parameters('authenticationType')]"
                },
                "newStorageAccountName": {
                  "value": "[variables('newStorageAccountName')]"
                },
                "storageAccountType": {
                    "value": "[parameters('storageAccountType')]"
                },
                "storageAccountNewOrExisting": {
                    "value": "[parameters('storageAccountNewOrExisting')]"
                },
                "storageAccountExistingRG": {
                    "value": "[parameters('storageAccountExistingRG')]"
                },
                "adminUsername": {
                  "value": "[parameters('adminUsername')]"
                },
                "adminPassword": {
                  "value": "[parameters('adminPassword')]"
                },
                "sshPublicKey": {
                  "value": "[parameters('sshPublicKey')]"
                },
                "availabilitySet": {
                  "value": "[parameters('availabilitySet')]"
                },
                "availabilitySetName": {
                  "value": "[parameters('availabilitySetName')]"
                },
                "availabilitySetFaultDomainCount": {
                  "value": "[parameters('availabilitySetFaultDomainCount')]"
                },
                "availabilitySetUpdateDomainCount": {
                  "value": "[parameters('availabilitySetUpdateDomainCount')]"
                },
                "baseUrl": {
                  "value": "[parameters('baseUrl')]"
                },
                "tvnetStorageName": {
                    "value" : "[parameters('tvnetStorageName')]"
                },
                "privateStorageName": {
                    "value": "[parameters('privateTvnetStorageName')]"
                },
                "tvnetStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.tvnetStorageKey.value]"
                },
                "privateStorageKey": {
                    "value" : "[reference('Microsoft.Resources/deployments/SettingUpTvnetStorage', '2018-05-01').outputs.privateStorageKey.value]"
                },
                "sectiontvnet": {
                    "value" : "[variables('sectiontvnet')]"
                },
                "guestshellconfig": {
                    "value" : "[variables('guestshellconfig')]"
                }
            }
          }
        }
    ]
}
